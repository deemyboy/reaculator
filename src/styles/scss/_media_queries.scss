@use "sass:math";

/* A map of breakpoints.
  $breakpoints: (
  xs: 480px,
  sm: 767px,
  md: 992px,
  lg: 1200px,
  );
*/
@mixin respond-above($bp) {
  @if map-has-key($grid-breakpoints, $bp) {
    $bp-val: map-get($grid-breakpoints, $bp);

    @media (min-width: $bp-val) {
      @content;
    }
  }

  @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$bp}.';
  }
}

/*  usage 
@include respond-above(xs) {
  styles here
}
*/
@mixin respond-below($bp) {
  @if map-has-key($grid-breakpoints, $bp) {
    $bp-val: map-get($grid-breakpoints, $bp);

    @media (max-width: $bp-val) {
      @content;
    }
  }

  @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$bp}.';
  }
}

@mixin respond-between($lower, $upper) {

  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($grid-breakpoints, $lower) and map-has-key($grid-breakpoints, $upper) {
    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($grid-breakpoints, $lower);
    $upper-breakpoint: map-get($grid-breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }

    // If one or both of the breakpoints don't exist.
  }

  @else {

    // If lower breakpoint is invalid.
    @if (map-has-key($grid-breakpoints, $lower)==false) {
      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($grid-breakpoints, $upper)==false) {
      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}

@mixin orientation($direction) {
  $orientation-landscape: "(orientation:landscape)";
  $orientation-portrait: "(orientation:portrait)";

  @if $direction ==landscape {
    @media #{$orientation-landscape} {
      @content;
    }
  }

  @if $direction ==portrait {
    @media #{$orientation-portrait} {
      @content;
    }
  }
}

///////////// ///////////// /////////////
/////////// portrait section ////////////
///////////// ///////////// /////////////

///////////// portrait
/////// xs: 480px
@include respond-below(xs) {
  #{$outer-wrapper} {
    .settings-icon {
      transform: scale(1.5);
    }

    div.calculator {


      >p.title {}

      .keyboard {
        .btn {
          // width: clamp(3rem, 5rem, 5rem);
          // font-size: clamp(1.5rem, 2.5rem, 4rem);
        }
      }

      .main-btn-wrapper {
        p.btn-subtitle {
          position: relative;
          top: 1.9rem;
          height: 0;
          // font-size: clamp(1rem, 22vh, 2rem);
        }
      }
    }

    .display {

      .calculation {
        // font-size: clamp(.8rem, 1.2rem, 2rem);
      }

      .result {
        // font-size: clamp(1rem, 2rem, 3rem);
      }


      .calculation-error,
      .result-error {}

    }

    &#{$open} {}
  }

}

///////////// portrait
/////// sm: 767px
@include respond-below(sm) {
  #{$outer-wrapper} {
    & {
      margin-top: 0;
    }

    // sizes here
    div.calculator {
      >.title {}

    }

    .display {

      .calculation {}

      .result {

        // font-size: clamp(1rem, 2rem, 3rem);
      }

      .result,
      .result-error {}

      p {}
    }

  }
}

///////////// portrait
/////// md: 992px
/////// open
@include respond-below(md) {
  #{$outer-wrapper} {
    & {}

    p.settings-icon {}

    div.calculator {}

    .display {}

    .main-keyboards {
      .main-btn-wrapper {}

    }


    &#{$open} {

      //sizes here
      div.calculator {}


    }
  }
}

///////////// portrait
/////// lg: 1200px
/////// open
@include respond-below(lg) {
  #{$outer-wrapper} {
    & {}

    p.settings-icon {}

    div.calculator {

      .keyboard {
        .btn {
          // width: clamp(2rem, 3rem, 4rem);
          // font-size: clamp(3rem, 14rem, 5rem);
        }
      }

      .main-keyboards {
        .main-btn-wrapper {}

      }
    }

    .display {}

    &#{$open} {

      //sizes here
      div.calculator {}


    }
  }
}

///////////// ///////////// /////////////
/////////// landscape section ///////////
///////////// ///////////// /////////////


///////////// landscape
/////// xs: 480px
@include respond-below(xs) {
  @include orientation(landscape) {
    #{$outer-wrapper} {
      .settings-icon {}

      div.calculator {

        .title {}

        .keyboard {
          .btn {
            // width: clamp(3rem, 4rem, 5rem);
          }
        }
      }

      .display {

        .calculation {}

        .result {}

        .calculation-error,
        .result-error {}


      }
    }
  }
}

///////////// landscape
/////// sm: 767px
@include respond-below(sm) {
  @include orientation(landscape) {
    #{$outer-wrapper} {
      & {}

      .settings-icon {}

      div.calculator {

        p.title {}

        .keyboard {
          .btn {
            // width: clamp(1.5rem, 2.5rem, 3.5rem);
            // font-size: clamp(2rem, 3rem, 5rem);
          }
        }
      }

      .display {

        .calculation {}

        .result,
        .result-error {}

        .keyboard {
          .btn {}
        }
      }

    }
  }
}

///////////// landscape
///////md: 992px
/// iphone landscape

@include respond-below(md) {
  @include orientation(landscape) {
    :root {}

    body {}

    #{$outer-wrapper} {
      & {}

      .settings-icon {}

      div.calculator {

        p.title {}

        .keyboard {
          .btn {
            min-width: unset;
            // width: clamp(1.5rem, 8vh, 3.5rem);
            // font-size: clamp(1rem, 2rem, 3rem);
          }
        }

        .main-btn-wrapper {
          p.btn-subtitle {
            // position: relative;
            // top: -1.3rem;
            // height: 0;
            // font-size: clamp(.5rem, 1vw, 2rem);
          }
        }
      }

      .display {

        .calculation {}

        .result,
        .result-error {}

        .keyboard {
          .btn {}
        }
      }


    }
  }

  #{$outer-wrapper} {
    &#{$open} {
      div.calculator {
        .keyboard {}
      }

      &#{$animation} {}

      &#{$picture} {}
    }
  }
}

///////////// landscape
///////lg: 1200px

@include respond-below(lg) {
  @include orientation(landscape) {
    :root {}

    body {}

    #{$outer-wrapper} {
      & {}

      .settings-icon {}

      div.calculator {

        p.title {}

      }

      .display {

        .calculation {}

        .result,
        .result-error {}

        .keyboard {
          .btn {}
        }
      }


    }
  }

  #{$outer-wrapper} {
    &#{$open} {
      div.calculator {
        .keyboard {}
      }

      &#{$animation} {}

      &#{$picture} {}
    }
  }
}