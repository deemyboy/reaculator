@use "sass:math";
/* A map of breakpoints.
  $breakpoints: (
    xs: 576px,
    sm: 767px,
    md: 992px,
    lg: 1200px,
  );
*/
@mixin respond-above($bp) {
  @if map-has-key($grid-breakpoints, $bp) {
    $bp-val: map-get($grid-breakpoints, $bp);

    @media (min-width: $bp-val) {
      @content;
    }
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$bp}.';
  }
}

/*  usage 
@include respond-above(xs) {
  styles here
}
*/
@mixin respond-below($bp) {
  @if map-has-key($grid-breakpoints, $bp) {
    $bp-val: map-get($grid-breakpoints, $bp);

    @media (max-width: $bp-val) {
      @content;
    }
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$bp}.';
  }
}

@mixin respond-between($lower, $upper) {
  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($grid-breakpoints, $lower) and
    map-has-key($grid-breakpoints, $upper)
  {
    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($grid-breakpoints, $lower);
    $upper-breakpoint: map-get($grid-breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }

    // If one or both of the breakpoints don't exist.
  } @else {
    // If lower breakpoint is invalid.
    @if (map-has-key($grid-breakpoints, $lower) == false) {
      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($grid-breakpoints, $upper) == false) {
      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}

@mixin orientation($direction) {
  $orientation-landscape: "(orientation:landscape)";
  $orientation-portrait: "(orientation:portrait)";

  @if $direction == landscape {
    @media #{$orientation-landscape} {
      @content;
    }
  }
  @if $direction == portrait {
    @media #{$orientation-portrait} {
      @content;
    }
  }
}

///////////// ///////////// /////////////
/////////// basic structure  ////////////
///////////// ///////////// /////////////
/////// open

@include respond-below(xs) {
  #{$outer-wrapper} {
    & {
    }
    //sizes here
    // closed
    .calculator {
    }
    .settings {
    }
    .sidebar {
    }
    &#{$open} {
      .calculator {
      }
      .settings {
      }
      .sidebar {
      }
    }
  }
}


///////////// ///////////// /////////////
/////////// generic section /////////////
///////////// ///////////// /////////////

///////////// both portrait and landscape
/////// xs
@include respond-below(md) {
  #{$outer-wrapper} {
    & {
    }
    //sizes here
    // closed
    div.calculator {
      border-radius: 0;
    }
    .settings {
    }
    .sidebar {
      border-radius: 0;
    }
    &#{$open} {
      .calculator {
      }
      .settings {
      }
      .sidebar {
      }
    }
  }
}


///////////// ///////////// /////////////
/////////// portrait section ////////////
///////////// ///////////// /////////////

///////////// portrait
/////// xs

@include respond-below(xs) {
  #{$outer-wrapper} {
    .calculator {
      .settings {
        i.fa-cog {
          font-size: 1.6rem;
        }
      }
      > p.title {
        font-size: 2rem;
        line-height: 1rem;
        margin: 15px 5px;
      }
      .keyboard {
        .btn {
          min-width: 40px;
          &.btn-lg {
            font-size: 1.5rem;
          }
        }
      }
    }
    .sidebar {
      .keyboard {
        button {
        }
      }
    }
    &#{$open} {
    }
  }
  #{$outer-wrapper} {
  }
}

///////////// portrait
/////// sm - md

@include respond-between(sm, md) {
  #{$outer-wrapper} {
    & {
      margin-top: 0;
    }
    // sizes here
    .calculator {
      > .title {
      }
      .display {
        .calculation {
        }
        .result,
        .result_err {
        }
        p {
        }
      }
      .keyboard {
        border-radius: 1rem;
        justify-content: space-evenly;

        button {
        }
      }

    }
    .sidebar {
      > .title {
        font-size: 3rem;
        margin-top: -1.5rem;
      }
      .keyboard {
        display: flex;
        flex-direction: column;
        align-content: center;
        button {
          padding: 0;
        }
      }
      .keyboard-theme-type {
        .btn-theme-type {
        }
      }
      .keyboard-theme {
        .btn-theme {
        }
      }
      .sidebar-keyboard-wrapper {
      }
    }
  }
}

///////////// portrait
/////// sm - md
/////// open

@include respond-between(sm, md) {
  #{$outer-wrapper} {
    &#{$open} {
      //sizes here
      .calculator {
      }
      .sidebar {
      }
    }
  }
}

///////////// ///////////// /////////////
/////////// landscape section ///////////
///////////// ///////////// /////////////

///////////// portrait
/////// md

@include respond-below(md) {
  @include orientation(landscape) {
    body {
      margin: 0;
    }
    #{$outer-wrapper} {
      & {
        height: 100vh;
        width: 100%;
        max-width: unset !important;
        margin: 0;
        padding: 0;
      }
      div.calculator {
        max-width: none;
        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        border: 0;
        p.title {
          font-size: 2rem;
          line-height: 1rem;
          margin: 13px 13px 5px;
          font-weight: 100;
        }
        .settings {
          .fa.fa-cog {
            font-size: 1.5rem;
          }
        }
        .display {
          margin: 17px 6px;
          .calculation {
          }
          .result,
          .result_err {
          }
        }
        .keyboard {
          .btn {
            margin: 7px;
            height: 5rem;
            width: 5rem;
            font-size: 3rem;
          }
          &.keyboard-utility {
            .btn {
            }
          }
        }
      }
      div.sidebar {
        height: 100%;
      }
    }
  }
  #{$outer-wrapper} {
    &#{$open} {
      div.calculator {
        .keyboard {
        }
      }

      &#{$anim} {
        .sidebar {
        }
      }

      &#{$picture} {
        .sidebar {
        }
      }


    }
  }
}
  
  ///////////// landscape
/////// sm
@include respond-below(sm) {
  @include orientation(landscape) {
    #{$outer-wrapper} {
      & {
        width: 100%;
        margin-top: 0;
        padding-left: $s-1r$i;
        padding-right: $s-1r$i;
      }
      div.calculator {
        max-width: none;
        p.title {
          font-size: 2rem;
          line-height: 1rem;
          margin: 13px 13px 5px;
          font-weight: 100;
        }
        .settings {
          .fa.fa-cog {
            font-size: 1.5rem;
          }
        }
        .display {
          margin: 14px 13px 10px;
          padding: 0px 5px;
          .calculation {
            font-size: 1.3rem;
            min-height: 2rem;
          }
          .result,
          .result_err {
            font-size: 1.8rem;
          }
        }
        .keyboard {
          .btn {
            margin: 5px;
            height: 4rem;
            width: 4rem;
            font-size: 2rem;
          }
        }
      }
      .sidebar {
        .keyboard {
          .btn-theme-type {
          }
          .btn-theme {
          }
        }
      }
    }
  }
}

///////////// landscape
/////// xs
@include respond-below(xs) {
  @include orientation(landscape) {
    #{$outer-wrapper} {
      & {
        width: 100%;
        margin-top: $s-05r$i;
        padding-left: $s-1r$i;
        padding-right: $s-1r$i;
      }
      .calculator {
        .title {
          font-size: 2rem;
          line-height: 1rem;
          margin: 13px 13px 0;
        }
      }
      .sidebar {
        .keyboard {
          .btn-theme-type {
          }
          .btn-theme {
          }
        }
      }
    }
  }
}

///////////// landscape
/////// xs
/////// open
@include respond-below(xs) {
  @include orientation(landscape) {
    #{$outer-wrapper} {
      &#{$open} {
        .calculator {
        }
      }
    }
  }
}